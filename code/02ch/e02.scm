(define (make-point x y) (cons x y))
(define (x-point p) (car p))
(define (y-point p) (cdr p))

(define (make-segment P Q) (cons P Q))
(define (start-segment s) (car s))
(define (end-segment s) (cdr s))

(define (print-point p)
  (newline)
  (display "(")
  (display (x-point p))
  (display ",")
  (display (y-point p))
  (display ")"))

(make-point 0 0)
(print-point (make-point 1 2))

(define (midpoint-segment s)
  (let ((start (start-segment s))
        (end (end-segment s)))
       (let ((x1 (x-point start))
             (x2 (x-point end))
             (y1 (y-point start))
             (y2 (y-point end)))
            (make-point (/ (+ x1 x2) 2)
                        (/ (+ y1 y2) 2)))))
(let ((p (make-point 1 1))
      (q (make-point 0 0)))
     (let ((s (make-segment p q)))
          (print-point (midpoint-segment s))))
